<style type="text/css">
		body {
			background: #000;
		}
		#conteneur {
			width: 400px;
			height: 300px;
			border: 1px solid #333;
			margin: 0 auto;
			background: #FFF;
			text-align: center;
		}
		h1 {
			text-align: center;
			font-variant: small-caps;
			color: #FFF;
		}
		p {
			text-align: center;
			font-variant: small-caps;
			color: #FFF;
		}
	</style>
	<script type="text/javascript">
	
	// Constantes du jeu
	var BARRE_JEU_WIDTH = 10;
	var BARRE_JEU_HEIGHT = 80;
	var PXL_DEPLA = 1.25;
	var ZONE_JEU_WIDTH = 400;
	var ZONE_JEU_HEIGHT = 300;
	var DIMENSION_BALLE = 8;
	var VITESSE_BALLE = 1.5;
	var SCORE_MAX = 25;
	
	// Variables
	var playerBarY; // Position en Y de la barre: Changement dynamique avec les touches du clavier
	var playerBarX; 
	var computerBarY; 
	var computerBarX; 
	var context;
	var balleX = 100;
	var balleY = 250;
	var dirBalleX = -1; // vers la droite
	var dirBalleY = -1; // vers le haut
	var boucleJeu;
    var score = 0;
  // il faudrait ajouter un score pour que cela ressemble à un jeu
	
	window.addEventListener('load', function () {
	  // On récupère l'objet canvas pour dessiner dedans
	  context = document.getElementById('canvasElem').getContext('2d');
	  
	  // Initialisations des variables
	  playerBarX = (ZONE_JEU_WIDTH-BARRE_JEU_WIDTH)-10;
	  playerBarY = (ZONE_JEU_HEIGHT-BARRE_JEU_HEIGHT);
	  computerBarX = 0+10;
	  computerBarY = playerBarY;
	  
    // il faudrait ajouter un score pour que cela ressemble à un jeu
	  	  
	  // Boucle de rafraichissement du contexte 2D
	  boucleJeu = setInterval(refreshGame, 10);
	  
	  // Gestion des événements
	  window.document.onkeydown = deplacement;

	}, false);
	
        
	function refreshGame() {
		
		// On efface la zone
		context.clearRect(0,0, ZONE_JEU_WIDTH, ZONE_JEU_HEIGHT);
		
		// Puis on réaffiche le nécessaire
		
		
		// Calcul de la nouvelle position de la balle
		
        
		if ( (balleY + dirBalleY * VITESSE_BALLE) >  ZONE_JEU_HEIGHT) {
			dirBalleY = -1;
		}
		else if ( (balleY + dirBalleY * VITESSE_BALLE) <  0) {
			dirBalleY = 1;
		}
                                
		if ( balleX >= 400 ) {
      		perdu();
    	}
		else if ( balleX <= 0||score == SCORE_MAX ){
      		gagne();
    	}
		else if (mustRebond("left",computerBarX, computerBarY)){		   
		   dirBalleX = 1;
       // change un peu la direction en fonction de comment la balle touche la barre.
		   dirBalleY= 2*(balleY-(computerBarY+BARRE_JEU_HEIGHT/2))/BARRE_JEU_HEIGHT;
		}
		else {
		   if (mustRebond("rigth",playerBarX, playerBarY)) {

		      dirBalleX = -1;
          // change un peu la direction en fonction de comment la balle touche la barre.
		      dirBalleY= 2*(balleY-(playerBarY+BARRE_JEU_HEIGHT/2))/BARRE_JEU_HEIGHT;

              score = score+1;
		   }
		}

		 balleX = balleX+(VITESSE_BALLE*dirBalleX);		
		 balleY = balleY+(VITESSE_BALLE*dirBalleY);

    // la barre computer courre après la balle
		computerBarY = calculComputerBarY();
		

		// Réaffichage des barres
		context.fillStyle = "#333333";
		context.fillRect(playerBarX,playerBarY,BARRE_JEU_WIDTH,BARRE_JEU_HEIGHT);		
		context.fillStyle = "#333333";
		context.fillRect(computerBarX,computerBarY,BARRE_JEU_WIDTH,BARRE_JEU_HEIGHT);
		

		// Affichage de la balle
		context.fillStyle = "#16A6DB";
		context.beginPath();
		context.arc(balleX, balleY, DIMENSION_BALLE, 0, Math.PI*2, true);
		context.closePath();
		context.fill();

		document.getElementById("score").innerHTML = score;
		
	}
	
	function deplacement(e) {
	
       if(playerBarY >= 0 & playerBarY <= 300)
          { 
        
        
        //alert(e.keyCode);
        if(e.keyCode == 38)
    	{
            playerBarY = playerBarY - 30;
          if(playerBarY <= 0)
         {  
         	playerBarY = 0;
         }
          
     }
        
       
        if(e.keyCode == 40)
     	{   
       		playerBarY = playerBarY + 30;
        	if(playerBarY >= 300-BARRE_JEU_HEIGHT)
         	{  
            	playerBarY = 300-BARRE_JEU_HEIGHT;
         	}
        }
        
     }
	}

	
	function perdu() {
		clearInterval(boucleJeu);
		alert("Tu as perdu !");
        console.log("perdu")
	}
	function gagne() {
    	clearInterval(boucleJeu);
        console.log("perdu")
		alert("Bravo vous avez gagné !");
        
	}
	


	// fonctions un peu compliquées.
	// On lui donne "rigth" (droite) ou "left" (gauche) avec le X et un Y d une barre et elle nous dit si la balle rebondit ou pas.
	// si la balle est au milieu du jeu, elle ne rebondira pas. Si elle touche un mur, oui.
  function mustRebond(type,playerX, playerY) {
      var res;

      // si on est à niveau "epaisseur" de la barre 
      if(type =="left"){
        res = (balleX + (dirBalleX * VITESSE_BALLE) < BARRE_JEU_WIDTH);
      }
      if(type =="rigth"){
        res = (balleX + (dirBalleX * VITESSE_BALLE) > (ZONE_JEU_WIDTH - BARRE_JEU_WIDTH));
      }

      // et si on est dans l'intervalle représenté par la barre...
      var onTheBar = (balleY + (dirBalleY * VITESSE_BALLE) >= playerY)
                   && (balleY + (dirBalleY * VITESSE_BALLE) <= (playerY+BARRE_JEU_HEIGHT));

      // ou si l espace entre la barre et le mur est inférieur au diametre de la balle                                
      var betweenBarAndWall = (ZONE_JEU_HEIGHT - (playerY+BARRE_JEU_HEIGHT) < DIMENSION_BALLE)
                              && balleY > playerY;
      betweenBarAndWall = betweenBarAndWall || ((playerY < DIMENSION_BALLE) && balleY < playerY+BARRE_JEU_HEIGHT);   

      res = res && (onTheBar || betweenBarAndWall);


		return res;
  }
	
  function calculComputerBarY() {
      // la barre computer courre après la balle
      
     if(computerBarY+2*(BARRE_JEU_HEIGHT/3) < balleY){  
		      if ( (computerBarY+PXL_DEPLA+BARRE_JEU_HEIGHT) < ZONE_JEU_HEIGHT ) {
              computerBarY += PXL_DEPLA;
          }
      }
      else if(computerBarY+(BARRE_JEU_HEIGHT/3) > balleY){  
		      if ( ((computerBarY-PXL_DEPLA)) > 0 ) {
		          computerBarY -= PXL_DEPLA;
		      }
      }
	  	return computerBarY;
	}
    
        
	
	</script>

	<h1>Pong</h1>
	<div id="conteneur">
	<canvas id="canvasElem" width="400" height="300">
		Votre navigateur ne supporte pas la fonctionnalité Canvas.
	</canvas>	
    <p id="score"></p>
	</div>
    
